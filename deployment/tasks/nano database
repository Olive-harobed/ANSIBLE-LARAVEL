---
- name: Start MySQL
  service:
    name: mysql
    state: started
    enabled: yes
  when: ("'mysql'in services and ansible_facts.services['mysql.service'].status == 'disabled'") or ("'mariadb'in services and ansible_facts.services['mariadb.service'].status == 'disabled'")
- name: Create new root password
  mysql_user:
    name: 'root'
    password: "{{mysql_password}}"
    state: present
    host_all: true
    login_user: 'root'
    login_password: "{{mysql_password}}"
    login_unix_socket: "{{login_unix_socket | default(omit)}}"
- name: Remove test database
  mysql_db:
    name: test
    state: absent
    login_user: 'root'
    login_password: "{{mysql_password}}"
    login_unix_socket: "{{login_unix_socket | default(omit)}}"
- name: Remove anonymous users
  mysql_user:
    name: ''
    state: absent
    host_all: true
    login_user: 'root'
    login_password: "{{mysql_password}}"
    login_unix_socket: "{{login_unix_socket | default(omit)}}"
- name: Create User
  mysql_user:
    login_user: 'root'
    login_password: "{{mysql_password}}"
    name: "{{mysql_user}}"
    password: "{{mysql_password}}"
    priv: "{{database_name}}.*:ALL"
    state: present
  when: ("'mysql'in services and ansible_facts.services['mysql.service'].status == 'enabled'") or ("'mariadb'in services and ansible_facts.services['mariadb.service'].status == 'enabled'")
- name: Create DB
  mysql_db:
    name: "{{database_name}}"
    state: present
    login_user: "{{mysql_user}}"
    login_password: "{{mysql_password}}"
  when: ("'mysql'in services and ansible_facts.services['mysql.service'].status == 'enabled'") or ("'mariadb'in services and ansible_facts.services['mariadb.service'].status == 'enabled'")
- name: Prevent remote root login
  mysql_query:
    query: DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
    login_user: 'root'
    login_password: "{{mysql_password}}"
    login_unix_socket: "{{login_unix_socket | default(omit)}}"

